!function(){"use strict";class e{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._likeButton.classList.toggle("card__like-button_active")})),this._deleteButton.addEventListener("click",(()=>{this._cardElement.remove()})),this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}getCard(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImageElement=this._cardElement.querySelector(".card__image"),this._cardElement.querySelector(".card__title").textContent=this._name,this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._submitButtonSelector=e.submitButtonSelector,this._inputElements=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInputs(){return!this._inputElements.every((e=>e.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}toggleButtonState(){this._hasInvalidInputs()?this.disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}resetValidation(){this.toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"!==e.key&&"Esc"!==e.key||this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close"))&&this.close()}))}}class o extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=this._popupForm.querySelectorAll(".modal__input")}_getInputValues(){return this._inputData={},this._inputList.forEach((e=>{this._inputData[e.name]=e.value})),this._inputData}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}getForm(){return this._popupForm}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popupForm.reset()}))}}document.querySelector(".profile__title"),document.querySelector(".profile__subtitle");const i=document.querySelector("#profile-title-input"),r=document.querySelector("#profile-subtitle-input"),n=document.querySelector(".profile__edit-button"),l=document.querySelector("#edit-modal"),a=document.querySelector("#modal-form-profile"),c=(l.querySelector("#edit-modal-close"),document.querySelector("#profile-submit"),document.querySelector("#add-modal")),u=document.querySelector("#modal-form-card"),d=document.querySelector(".profile__add-button"),m=(c.querySelector("#add-modal-close"),document.querySelector("#submit-button"),document.querySelector(".cards__list"),document.querySelector("#preview-modal").querySelector("#popup-modal-close"),{inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"});function p(e){b.open(e)}function _(t){const s=function(t){return new e(t,"#card-template",p).getCard()}(t);f.addItem(s)}const h=new t(m,a),E=new t(m,u);h.enableValidation(),E.enableValidation();const f=new class{constructor(e,t){let{items:s,renderer:o}=e;this._items=s,this._renderer=o,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:_},".cards__list");f.renderItems();const v=new class{constructor(e){let{profileName:t,profileJob:s}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s)}getUserInfo(){return{profileName:this._profileName.textContent,profileJob:this._profileJob.textContent}}setUserInfo(e){let{profileName:t,profileJob:s}=e;this._profileName.textContent=t,this._profileJob.textContent=s}}({profileName:".profile__title",profileJob:".profile__subtitle"}),S=new o("#edit-modal",(function(e){const t=e.title,s=e.subtitle;v.setUserInfo({profileName:t,profileJob:s}),S.close()}));S.setEventListeners();const y=new o("#add-modal",(function(e){_({name:e.title,link:e.url}),y.close(),E.disableButton()}));y.setEventListeners();const b=new class extends s{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._previewImage=this._popupElement.querySelector(".modal__image"),this._previewTitle=this._popupElement.querySelector(".modal__title")}open(e){this._previewImage.src=e.link,this._previewImage.alt=e.name,this._previewTitle.textContent=e.name,super.open()}close(){super.close(),setTimeout((()=>{this._previewImage.src="",this._previewImage.alt="",this._previewTitle.textContent=""}),500)}}({popupSelector:"#preview-modal"});b.setEventListeners(),d.addEventListener("click",(()=>{y.open()})),n.addEventListener("click",(()=>{const e=v.getUserInfo();i.value=e.profileName,r.value=e.profileJob,S.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,